name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  trigger_pipeline:
    name: Trigger CodePipeline
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Trigger CodePipeline
        id: trigger_pipeline
        run: |
          executionId=$(aws codepipeline start-pipeline-execution --name Credit-Apps-Production --region ${{ secrets.AWS_REGION }} --query "pipelineExecutionId" --output text)
          echo "::set-output name=executionId::$executionId"

  wait_for_pipeline:
    name: Wait for CodePipeline
    runs-on: ubuntu-latest
    needs: trigger_pipeline

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Wait for CodePipeline to complete
        id: wait
        run: |
          executionId=${{ needs.trigger_pipeline.outputs.executionId }}
          while true; do
            status=$(aws codepipeline get-pipeline-execution --pipeline-name Credit-Apps-Production --region ${{ secrets.AWS_REGION }} --pipeline-execution-id $executionId --query "pipelineExecution.status" --output text)
            echo "Pipeline status: $status"
            if [[ "$status" != "InProgress" ]]; then
              break
            fi
            sleep 10
          done
          echo "::set-output name=status::$status"

      - name: Check CodePipeline status
        run: |
          status=${{ steps.wait.outputs.status }}
          if [[ "$status" != "Succeeded" ]]; then
            echo "Deployment failed: $status"
            exit 1
          else
            echo "Deployment succeeded: $status"
          fi
